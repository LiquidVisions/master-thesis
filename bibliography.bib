@article{2024_SIM_key_issues_and_trends,
  type = {Article},
  title = {The 2014 {{SIM IT}} Key Issues and Trends Study: {{Appendix}}},
  author = {Kappelman, Leon and McLean, Ephraim and Johnson, Vess and Gerhart, Natalie},
  date = {2014-12},
  journaltitle = {MIS QUARTERLY EXECUTIVE},
  volume = {13},
  number = {4},
  publisher = {{INDIANA UNIV, OPER \& DECISION TECHNOL DEPT}},
  location = {{KELLEY SCH BUS, E 10 ST, BLOOMINGTON, IN 47405-1701 USA}},
  issn = {1540-1960},
  affiliation = {Kappelman, L (Corresponding Author), Univ N Texas, Denton, TX 76203 USA. Kappelman, Leon; Gerhart, Natalie, Univ N Texas, Denton, TX 76203 USA. McLean, Ephraim, Georgia State Univ, Atlanta, GA 30303 USA. Johnson, Vess, Univ Incarnate Word, San Antonio, TX USA.},
  da = {2022-04-27},
  doc-delivery-number = {AW2YO},
  eissn = {1540-1979},
  journal-iso = {MIS Q. Exec.},
  langid = {english},
  number-of-cited-references = {0},
  research-areas = {Information Science \& Library Science; Business \& Economics},
  researcherid-numbers = {Johnson, Vess/ABC-9133-2020},
  times-cited = {56},
  unique-id = {WOS:000346152700004},
  usage-count-last-180-days = {1},
  usage-count-since-2013 = {6},
  web-of-science-categories = {Information Science \& Library Science; Management},
  web-of-science-index = {Social Science Citation Index (SSCI)},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\XULEF3PY\\The_2014_SIM_IT_Key_Issues_and_Trends_St20160220-11512-1lwykc2-with-cover-page-v2 (1).pdf}
}

@article{agarwal_editorialevolvable_2015,
  title = {Editorial—{{Evolvable Systems}}: {{Through}} the {{Looking Glass}} of {{IS}}},
  shorttitle = {Editorial—{{Evolvable Systems}}},
  author = {Agarwal, Ritu and Tiwana, Amrit},
  date = {2015-09},
  journaltitle = {Information Systems Research},
  shortjournal = {Information Systems Research},
  volume = {26},
  number = {3},
  pages = {473--479},
  issn = {1047-7047, 1526-5536},
  doi = {10.1287/isre.2015.0595},
  url = {http://pubsonline.informs.org/doi/10.1287/isre.2015.0595},
  urldate = {2022-04-23},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\J2B2R7EY\\Agarwal and Tiwana - 2015 - Editorial—Evolvable Systems Through the Looking G.pdf}
}

@incollection{bayro-corrochano_towards_2013,
  title = {Towards an {{Engineering-Based Research Approach}} for {{Enterprise Architecture}}: {{Lessons Learned}} from {{Normalized Systems Theory}}},
  shorttitle = {Towards an {{Engineering-Based Research Approach}} for {{Enterprise Architecture}}},
  booktitle = {Progress in {{Pattern Recognition}}, {{Image Analysis}}, {{Computer Vision}}, and {{Applications}}},
  author = {Huysmans, Philip and Verelst, Jan},
  editor = {Bayro-Corrochano, Eduardo and Hancock, Edwin},
  date = {2013},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  volume = {8827},
  pages = {58--72},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-642-38490-5_5},
  url = {http://link.springer.com/10.1007/978-3-642-38490-5_5},
  urldate = {2022-04-25},
  abstract = {The emerging field of enterprise engineering provides a promising outlook for positioning relevant research. Enterprise Architecture frameworks which are frequently used in practice, but are often criticized from a research perspective, can be positioned in this field. The challenge for the enterprise engineering field is to provide a framework to improve such frameworks using a rigorous scientific approach. This paper aims to contribute to addressing this challenge by proposing components for a research framework which focuses on applying engineering insights to enterprise architecture. It first explores how current enterprise architecture frameworks handle issues relevant for engineering (i.e., complexity, change and integration). It then introduces additional components which could contribute towards a more systematic approach. These components are derived from the way the Normalized Systems Theory was developed, and successfully introduced engineering standards into the design software architecture.},
  isbn = {978-3-319-12567-1 978-3-319-12568-8},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\DAT34VIS\\Huysmans and Verelst - 2013 - Towards an Engineering-Based Research Approach for.pdf}
}

@inproceedings{breivold_systematic_2010,
  title = {A {{Systematic Review}} on {{Architecting}} for {{Software Evolvability}}},
  booktitle = {2010 21st {{Australian Software Engineering Conference}}},
  author = {Breivold, Hongyu Pei and Crnkovic, Ivica},
  date = {2010-04},
  pages = {13--22},
  issn = {2377-5408},
  doi = {10.1109/ASWEC.2010.11},
  abstract = {For long-lived systems, there is a need to address evolvability (i.e. a system's ability to easily accommodate changes) explicitly during the entire lifecycle. In this paper, we undertake a systematic review to obtain an overview of the existing studies in promoting software evolvability at architectural level. The search strategy identified 58 studies that were catalogued as primary studies for this review after using multi-step selection process. The studies are classified into five main categories of themes, including techniques that support quality considerations during software architecture design, architectural quality evaluation, economic valuation, architectural knowledge management and modeling techniques. The review investigates what is currently known about architecting software evolvability at architecture level. Implications for research and practice are presented.},
  eventtitle = {2010 21st {{Australian Software Engineering Conference}}},
  keywords = {Australia,Computer architecture,Computer industry,Costs,Data mining,Guidelines,Protocols,Software architecture,software architecture evolution,Software engineering,Software evolvability,Software systems},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\EJ3LCLQ3\\Breivold and Crnkovic - 2010 - A Systematic Review on Architecting for Software E.pdf;C\:\\Users\\gkoks\\Zotero\\storage\\YPLXYYRP\\5475056.html}
}

@article{de_bruyn_enabling_2018,
  title = {Enabling {{Normalized Systems}} in {{Practice}} – {{Exploring}} a {{Modeling Approach}}},
  author = {De Bruyn, Peter and Mannaert, Herwig and Verelst, Jan and Huysmans, Philip},
  date = {2018-02},
  journaltitle = {Business \& Information Systems Engineering},
  shortjournal = {Bus Inf Syst Eng},
  volume = {60},
  number = {1},
  pages = {55--67},
  issn = {2363-7005, 1867-0202},
  doi = {10.1007/s12599-017-0510-4},
  url = {http://link.springer.com/10.1007/s12599-017-0510-4},
  urldate = {2022-04-23},
  abstract = {Contemporary organizations are required to adapt to a changing environment in an agile way, which is often deemed very challenging. Normalized Systems (NS) theory attempts to build highly evolvable software systems by using systems theory as its theoretical underpinning. A modeling method which supports the identification of the NS elements, required for building NS sofware in practice, is currently missing. Therefore, the paper introduces an approach for creating both data models and processing models in the context of NS, as well as their integration. It is discussed how these models can be taken as the input for the actual creation of evolutionary prototypes by using an earlier developed supporting tool. The modeling approach and its suitability for feeding the tool are evaluated to discover their current strengths and weaknesses.},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\W6YXBWWG\\De Bruyn et al. - 2018 - Enabling Normalized Systems in Practice – Explorin.pdf}
}

@article{dijkstra_letters_1968,
  title = {Letters to the Editor: Go to Statement Considered Harmful},
  shorttitle = {Letters to the Editor},
  author = {Dijkstra, Edsger W.},
  date = {1968-03},
  journaltitle = {Communications of the ACM},
  shortjournal = {Commun. ACM},
  volume = {11},
  number = {3},
  pages = {147--148},
  issn = {0001-0782, 1557-7317},
  doi = {10.1145/362929.362947},
  url = {https://dl.acm.org/doi/10.1145/362929.362947},
  urldate = {2023-03-20},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\Q5VIFHFF\\Dijkstra - 1968 - Letters to the editor go to statement considered .pdf}
}

@book{dijkstra_selected_1982,
  title = {Selected Writings on Computing: A Personal Perspective},
  shorttitle = {Selected Writings on Computing},
  author = {Dijkstra, Edsger Wybe},
  date = {1982},
  series = {Texts and Monographs in Computer Science},
  publisher = {{Springer-Verlag}},
  location = {{New York}},
  isbn = {978-0-387-90652-2},
  pagetotal = {362},
  keywords = {Computer programming,Computers,Electronic data processing}
}

@article{dvorak_tackling_2022,
  title = {Tackling Rapid Technology Changes by Applying Enterprise Engineering Theories},
  author = {Dvořák, Ondřej and Pergl, Robert},
  date = {2022-03},
  journaltitle = {Science of Computer Programming},
  shortjournal = {Science of Computer Programming},
  volume = {215},
  pages = {102747},
  issn = {01676423},
  doi = {10.1016/j.scico.2021.102747},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0167642321001404},
  urldate = {2022-05-01},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\F4U6BBMP\\Dvořák and Pergl - 2022 - Tackling rapid technology changes by applying ente.pdf}
}

@article{hevner_design_nodate,
  title = {Design {{Science}} in {{Information Systems Research}}},
  author = {Hevner, Alan R and March, Salvatore T and Park, Jinsoo and Ram, Sudha},
  langid = {english},
  keywords = {ev},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\9B6VWRMG\\Hevner et al. - Design Science in Information Systems Research.pdf}
}

@article{horning_software_2001,
  title = {Software Fundamentals: Collected Papers by {{David L}}. {{Parnas}}},
  shorttitle = {Software Fundamentals},
  author = {Horning, Jim},
  date = {2001-07},
  journaltitle = {ACM SIGSOFT Software Engineering Notes},
  shortjournal = {SIGSOFT Softw. Eng. Notes},
  volume = {26},
  number = {4},
  pages = {91--91},
  issn = {0163-5948},
  doi = {10.1145/505482.505498},
  url = {https://dl.acm.org/doi/10.1145/505482.505498},
  urldate = {2023-03-19},
  langid = {english}
}

@inproceedings{huysmans_integrating_2015,
  title = {Integrating {{Information Systems Using Normalized Systems Theory}}: {{Four Case Studies}}},
  shorttitle = {Integrating {{Information Systems Using Normalized Systems Theory}}},
  booktitle = {2015 {{IEEE}} 17th {{Conference}} on {{Business Informatics}}},
  author = {Huysmans, Philip and Verelst, Jan and Mannaert, Herwig and Oost, Arco},
  date = {2015-07},
  pages = {173--180},
  publisher = {{IEEE}},
  location = {{Lisbon, Portugal}},
  doi = {10.1109/CBI.2015.43},
  url = {http://ieeexplore.ieee.org/document/7264730/},
  urldate = {2022-04-25},
  abstract = {New technical and business opportunities lead to the adoption of new information systems. Integrating these new systems with the existing application landscape poses many challenges, especially when legacy systems are involved. These systems may rely on completely different architectures or assumptions regarding functionality. Normalized Systems Theory addresses this issue by stating that information systems should behave as stable systems. It identifies the main obstacle to achieving stability, so-called combinatorial effects, and proposes four design theorems to avoid these combinatorial effects. Based on these theorems, a set of exemplary software elements are created which can be used to generate applications. In this paper, we demonstrate the real-world usage of these software elements in legacy integration projects by describing four case studies. From a theoretical perspective, these cases validate the theorybased approach of Normalized Systems Theory. From a practical perspective, these cases demonstrate how adoption of Normalized Systems software could be approached: first, by integrating existing systems, and second, by building future applications adhering to the theory.},
  eventtitle = {2015 {{IEEE}} 17th {{Conference}} on {{Business Informatics}} ({{CBI}})},
  isbn = {978-1-4673-7340-1},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\UNHT9VDT\\Huysmans et al. - 2015 - Integrating Information Systems Using Normalized S.pdf}
}

@article{huysmans_positioning_nodate,
  title = {Positioning the {{Normalized Systems Theory}} in a {{Design Theory Framework}}},
  author = {Huysmans, Philip and Oorts, Gilles and Bruyn, Peter De and Mannaert, Herwig and Verelst, Jan},
  pages = {21},
  abstract = {Several frameworks have been proposed to define design science and design theory. For this reason, positioning a research stream within both paradigms has become a difficult exercise. In this paper, the Normalized Systems (NS) theory is positioned within design science and design theory, in particular the design theory framework formulated by Gregor \& Jones (2007). Normalized Systems theory has been proposed as a way to cope with the ever increasingly agile environment to which organizations and their software applications need to adapt. The results of positioning NS within the presented framework for design theories show that NS almost fully incorporates all components of the design theory anatomy. The application of NS theory to other fields is also discussed. By positioning Normalized System theory within design science and design theory, we also believe to contribute to the definition of both fields in this paper.},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\4ZTN7SII\\Huysmans et al. - Positioning the Normalized Systems Theory in a Des.pdf}
}

@book{johannesson_introduction_2014,
  title = {An {{Introduction}} to {{Design Science}}},
  author = {Johannesson, Paul and Perjons, Erik},
  date = {2014},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-10632-8},
  url = {http://link.springer.com/10.1007/978-3-319-10632-8},
  urldate = {2022-04-30},
  isbn = {978-3-319-10631-1 978-3-319-10632-8},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\554XHT5M\\Johannesson and Perjons - 2014 - An Introduction to Design Science.pdf}
}

@article{lehman_programs_1980,
  title = {Programs, Life Cycles, and Laws of Software Evolution},
  author = {Lehman, M.M.},
  date = {1980},
  journaltitle = {Proceedings of the IEEE},
  shortjournal = {Proc. IEEE},
  volume = {68},
  number = {9},
  pages = {1060--1076},
  issn = {0018-9219},
  doi = {10.1109/PROC.1980.11805},
  url = {http://ieeexplore.ieee.org/document/1456074/},
  urldate = {2022-04-25},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\KXYZEMV7\\Lehman - 1980 - Programs, life cycles, and laws of software evolut.pdf}
}

@book{mannaert_normalized_2009,
  title = {Normalized Systems Re-Creating Information Technology Based on Laws for Software Evolvability},
  author = {Mannaert, Herwig and Verelst, Jan},
  date = {2009},
  publisher = {{Koppa}},
  location = {{Kermt}},
  isbn = {978-90-77160-00-8},
  langid = {english},
  keywords = {ns},
  annotation = {OCLC: 1073467550},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\AL8TQPIL\\Mannaert and Verelst - 2009 - Normalized systems re-creating information technol.pdf}
}

@book{mannaert_normalized_2016,
  title = {Normalized Systems Theory: From Foundations for Evolvable Software toward a General Theory for Evolvable Design},
  shorttitle = {Normalized Systems Theory},
  author = {Mannaert, Herwig and Verelst, Jan and De Bruyn, Peter},
  date = {2016},
  publisher = {{nsi-Press powered bei Koppa}},
  location = {{Kermt}},
  isbn = {978-90-77160-09-1},
  langid = {english},
  pagetotal = {507},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\SKBV7YKY\\Mannaert et al. - 2016 - Normalized systems theory from foundations for ev.pdf}
}

@article{mannaert_realization_2020,
  title = {On the {{Realization}} of {{Meta-Circular Code Generation}} and {{Two-Sided Collaborative Metaprogramming}}},
  author = {Mannaert, Herwig and Cock, Koen De and Uhnak, Peter},
  date = {2020},
  pages = {11},
  abstract = {The automated generation of source code is a widely adopted technique to improve the productivity of computer programming. Normalized Systems Theory (NST) aims to create software systems exhibiting a proven degree of evolvability. A software implementation exists to create skeletons of Normalized Systems (NS) applications, based on automatic code generation. This paper describes how the NS model representation, and the corresponding code generation, has been made meta-circular, and presents its detailed architecture. It is argued that this feature may be crucial to improve the productivity of metaprogramming, as it enables scalable collaboration based on two-sided interfaces. Some preliminary results from applying this approach in practice are presented and discussed.},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\YUMTP3VB\\Mannaert et al. - 2020 - On the Realization of Meta-Circular Code Generatio.pdf}
}

@article{mannaert_towards_2012,
  title = {Towards Evolvable Software Architectures Based on Systems Theoretic Stability},
  author = {Mannaert, Herwig and Verelst, Jan and Ven, Kris},
  date = {2012-01},
  journaltitle = {Software: Practice and Experience},
  shortjournal = {Softw. Pract. Exper.},
  volume = {42},
  number = {1},
  pages = {89--116},
  issn = {00380644},
  doi = {10.1002/spe.1051},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/spe.1051},
  urldate = {2022-04-23},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\UI6ZJAMK\\Mannaert et al. - 2012 - Towards evolvable software architectures based on .pdf}
}

@book{mora_research_2012,
  title = {Research {{Methodologies}}, {{Innovations}} and {{Philosophies}} in {{Software Systems Engineering}} and {{Information Systems}}:},
  shorttitle = {Research {{Methodologies}}, {{Innovations}} and {{Philosophies}} in {{Software Systems Engineering}} and {{Information Systems}}},
  editor = {Mora, Manuel and Gelman, Ovsei and Steenkamp, Annette L. and Raisinghani, Mahesh},
  date = {2012},
  publisher = {{IGI Global}},
  doi = {10.4018/978-1-4666-0179-6},
  url = {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/978-1-4666-0179-6},
  urldate = {2022-06-27},
  isbn = {978-1-4666-0179-6 978-1-4666-0180-2},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\RQXEH5CG\\Mora et al. - 2012 - Research Methodologies, Innovations and Philosophi.pdf}
}

@book{neumann_strategic_1994,
  title = {Strategic Information Systems: Competition through Information Technologies},
  shorttitle = {Strategic Information Systems},
  author = {Neumann, Seev},
  date = {1994},
  publisher = {{Macmillan College Publishing Co. ; Maxwell Macmillan Canada ; Maxwell Macmillan International}},
  location = {{New York : Toronto : New York}},
  isbn = {978-0-02-386690-6},
  pagetotal = {258},
  keywords = {Information technology,Management information systems}
}

@online{noauthor_clean_nodate,
  title = {Clean {{Coder Blog}}},
  url = {https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html},
  urldate = {2022-12-28},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\D4PBA3D3\\SingleReponsibilityPrinciple.html}
}

@online{noauthor_entity_nodate,
  type = {repository},
  title = {Entity Gateway Interfaces},
  shorttitle = {Entity Gateway Interfaces},
  url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master/Generator/src/PanthaRhei.Generator.Domain/Gateways},
  organization = {{github}},
  keywords = {proto}
}

@article{noauthor_evolvability_nodate,
  title = {On the {{Evolvability}} of the {{TCP-IP Based Network Firewall Rule Base}}},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\38SCVDYG\\On the Evolvability of the TCP-IP Based Network Fi.pdf}
}

@article{noauthor_evolvability_nodate-1,
  title = {On the {{Evolvability}} of the {{TCP-IP Based Network Firewall Rule Base}}},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\BR79CULY\\On the Evolvability of the TCP-IP Based Network Fi.pdf}
}

@online{noauthor_seedingboundary_nodate,
  type = {repository},
  title = {{{SeedingBoundary}}},
  shorttitle = {{{SeedingBoundary}}},
  url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master/Generator/src/PanthaRhei.Generator.Application/Boundaries/SeedingBoundary.cs},
  organization = {{github}},
  keywords = {proto}
}

@article{nuel_towards_nodate,
  title = {Towards {{Designing Modular}} and {{Evolvable Business Processes}}},
  author = {Nuffel, Dieter Van},
  pages = {424},
  langid = {english},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\WJGRQ7BF\\Nuﬀel - Towards Designing Modular and Evolvable Business P.pdf}
}

@inproceedings{oorts_building_2014,
  title = {Building {{Evolvable Software Using Normalized Systems Theory}}: {{A Case Study}}},
  shorttitle = {Building {{Evolvable Software Using Normalized Systems Theory}}},
  booktitle = {2014 47th {{Hawaii International Conference}} on {{System Sciences}}},
  author = {Oorts, Gilles and Huysmans, Philip and De Bruyn, Peter and Mannaert, Herwig and Verelst, Jan and Oost, Arco},
  date = {2014-01},
  pages = {4760--4769},
  publisher = {{IEEE}},
  location = {{Waikoloa, HI}},
  doi = {10.1109/HICSS.2014.585},
  url = {http://ieeexplore.ieee.org/document/6759187/},
  urldate = {2022-07-05},
  eventtitle = {2014 47th {{Hawaii International Conference}} on {{System Sciences}} ({{HICSS}})},
  isbn = {978-1-4799-2504-9},
  keywords = {ns},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\M8AC27HM\\Oorts et al. - 2014 - Building Evolvable Software Using Normalized Syste.pdf}
}

@article{p_naur_nato_1968,
  title = {{{NATO SOFTWARE ENGINEERING CONFERENCE}} 1968},
  author = {{P. Naur} and {B. Randell}},
  date = {1968},
  langid = {english},
  keywords = {ev},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\2FZLPW2I\\McClure - 1968 - NATO SOFTWARE ENGINEERING CONFERENCE 1968.PDF}
}

@article{parnas_criteria_1972,
  title = {On the Criteria to Be Used in Decomposing Systems into Modules},
  author = {Parnas, DL.},
  date = {1972-12},
  journaltitle = {Communications of the ACM},
  shortjournal = {Commun. ACM},
  volume = {15},
  number = {12},
  pages = {1053--1058},
  issn = {0001-0782, 1557-7317},
  doi = {10.1145/361598.361623},
  url = {https://dl.acm.org/doi/10.1145/361598.361623},
  urldate = {2023-03-19},
  abstract = {This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a “modularization” is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.},
  langid = {english},
  keywords = {ev},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\E5KWMPEA\\Parnas - 1972 - On the criteria to be used in decomposing systems .pdf}
}

@incollection{Parnas2001,
  title = {On the Criteria to Be Used in Decomposing Systems into Modules},
  booktitle = {Pioneers and Their Contributions to Software Engineering: Sd\&m Conference on Software Pioneers, Bonn, June 28/29, 2001, Original Historic Contributions},
  author = {Parnas, David L.},
  editor = {Broy, Manfred and Denert, Ernst},
  date = {2001},
  pages = {479--498},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-48354-7_20},
  url = {https://doi.org/10.1007/978-3-642-48354-7_20},
  abstract = {This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a “modularization” is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.},
  isbn = {978-3-642-48354-7}
}

@article{peffers_design_2007,
  title = {A {{Design Science Research Methodology}} for {{Information Systems Research}}},
  author = {Peffers, Ken and Tuunanen, Tuure and Rothenberger, Marcus A. and Chatterjee, Samir},
  date = {2007-12},
  journaltitle = {Journal of Management Information Systems},
  shortjournal = {Journal of Management Information Systems},
  volume = {24},
  number = {3},
  pages = {45--77},
  issn = {0742-1222, 1557-928X},
  doi = {10.2753/MIS0742-1222240302},
  url = {https://www.tandfonline.com/doi/full/10.2753/MIS0742-1222240302},
  urldate = {2022-06-26},
  abstract = {The paper motivates, presents, demonstrates in use, and evaluates a methodology for conducting design science (DS) research in information systems (IS). DS is of importance in a discipline oriented to the creation of successful artifacts. Several researchers have pioneered DS research in IS, yet over the past 15 years, little DS research has been done within the discipline. The lack of a methodology to serve as a commonly accepted framework for DS research and of a template for its presentation may have contributed to its slow adoption. The design science research methodology (DSRM) presented here incorporates principles, practices, and procedures required to carry out such research and meets three objectives: it is consistent with prior literature, it provides a nominal process model for doing DS research, and it provides a mental model for presenting and evaluating DS research in IS. The DS process includes six steps: problem identification and motivation, definition of the objectives for a solution, design and development, demonstration, evaluation, and communication. We demonstrate and evaluate the methodology by presenting four case studies in terms of the DSRM, including cases that present the design of a database to support health assessment methods, a software reuse measure, an Internet video telephony application, and an IS planning method. The designed methodology effectively satisfies the three objectives and has the potential to help aid the acceptance of DS research in the IS discipline.},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\4IRHMKJ8\\Peffers et al. - 2007 - A Design Science Research Methodology for Informat.pdf}
}

@book{recker_scientific_2013,
  title = {Scientific {{Research}} in {{Information Systems}}},
  author = {Recker, Jan},
  date = {2013},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-30048-6},
  url = {http://link.springer.com/10.1007/978-3-642-30048-6},
  urldate = {2022-04-30},
  isbn = {978-3-642-30047-9 978-3-642-30048-6},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\XYF7DTW8\\Recker - 2013 - Scientific Research in Information Systems.pdf}
}

@book{robert_c_martin_clean_2018,
  title = {Clean Architecture: A Craftsman's Guide to Software Structure and Design},
  shorttitle = {Clean Architecture},
  author = {{Robert C. Martin}},
  date = {2018},
  series = {Robert {{C}}. {{Martin}} Series},
  publisher = {{Prentice Hall}},
  location = {{London, England}},
  abstract = {Building upon the success of best-sellers The Clean Coder and Clean Code, legendary software craftsman Robert C. "Uncle Bob" Martin shows how to bring greater professionalism and discipline to application architecture and design. As with his other books, Martin's Clean Architecture doesn't merely present multiple choices and options, and say "use your best judgment": it tells you what choices to make, and why those choices are critical to your success. Martin offers direct, no-nonsense answers to key architecture and design questions like: What are the best high level structures for different kinds of applications, including web, database, thick-client, console, and embedded apps? What are the core principles of software architecture? What is the role of the architect, and what is he/she really trying to achieve? What are the core principles of software design? How do designs and architectures go wrong, and what can you do about it? What are the disciplines and practices of professional architects and designers? Clean Architecture is essential reading for every software architect, systems analyst, system designer, and software manager -- and for any programmer who aspires to these roles or is impacted by their work},
  isbn = {978-0-13-449416-6},
  pagetotal = {404},
  keywords = {ca},
  annotation = {OCLC: on1004983973},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\AGIW5ZLH\\Martin and Martin - 2018 - Clean architecture a craftsman's guide to softwar.pdf}
}

@article{the_australian_national_university_positioning_2013,
  title = {Positioning and {{Presenting Design Science Research}} for {{Maximum Impact}}},
  author = {{The Australian National University} and Gregor, Shirley and Hevner, Alan R. and {University of South Florida}},
  date = {2013-02-02},
  journaltitle = {MIS Quarterly},
  shortjournal = {MISQ},
  volume = {37},
  number = {2},
  pages = {337--355},
  issn = {02767783, 21629730},
  doi = {10.25300/MISQ/2013/37.2.01},
  url = {https://misq.org/positioning-and-presenting-design-science-research-for-maximum-impact.html},
  urldate = {2022-06-26},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\Q84CLDXC\\The Australian National University et al. - 2013 - Positioning and Presenting Design Science Research.pdf}
}

@book{wieringa_design_2014-1,
  title = {Design {{Science Methodology}} for {{Information Systems}} and {{Software Engineering}}},
  author = {Wieringa, Roel J.},
  date = {2014},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-662-43839-8},
  url = {http://link.springer.com/10.1007/978-3-662-43839-8},
  urldate = {2022-06-27},
  isbn = {978-3-662-43838-1 978-3-662-43839-8},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\6HMIVG25\\Wieringa - 2014 - Design Science Methodology for Information Systems.pdf}
}
