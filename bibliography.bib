
@article{agarwal_editorialevolvable_2015,
  title = {Editorial—{{Evolvable Systems}}: {{Through}} the {{Looking Glass}} of {{IS}}},
  shorttitle = {Editorial—{{Evolvable Systems}}},
  author = {Agarwal, Ritu and Tiwana, Amrit},
  date = {2015-09},
  journaltitle = {Information Systems Research},
  shortjournal = {Information Systems Research},
  volume = {26},
  number = {3},
  pages = {473--479},
  issn = {1047-7047, 1526-5536},
  doi = {10.1287/isre.2015.0595},
  url = {http://pubsonline.informs.org/doi/10.1287/isre.2015.0595},
  urldate = {2022-04-23},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\J2B2R7EY\\Agarwal and Tiwana - 2015 - Editorial—Evolvable Systems Through the Looking G.pdf}
}

@incollection{bayro-corrochano_towards_2013,
  title = {Towards an {{Engineering-Based Research Approach}} for {{Enterprise Architecture}}: {{Lessons Learned}} from {{Normalized Systems Theory}}},
  shorttitle = {Towards an {{Engineering-Based Research Approach}} for {{Enterprise Architecture}}},
  booktitle = {Progress in {{Pattern Recognition}}, {{Image Analysis}}, {{Computer Vision}}, and {{Applications}}},
  author = {Huysmans, Philip and Verelst, Jan},
  editor = {Bayro-Corrochano, Eduardo and Hancock, Edwin},
  date = {2013},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  volume = {8827},
  pages = {58--72},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-642-38490-5_5},
  url = {http://link.springer.com/10.1007/978-3-642-38490-5_5},
  urldate = {2022-04-25},
  abstract = {The emerging field of enterprise engineering provides a promising outlook for positioning relevant research. Enterprise Architecture frameworks which are frequently used in practice, but are often criticized from a research perspective, can be positioned in this field. The challenge for the enterprise engineering field is to provide a framework to improve such frameworks using a rigorous scientific approach. This paper aims to contribute to addressing this challenge by proposing components for a research framework which focuses on applying engineering insights to enterprise architecture. It first explores how current enterprise architecture frameworks handle issues relevant for engineering (i.e., complexity, change and integration). It then introduces additional components which could contribute towards a more systematic approach. These components are derived from the way the Normalized Systems Theory was developed, and successfully introduced engineering standards into the design software architecture.},
  isbn = {978-3-319-12567-1 978-3-319-12568-8},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\DAT34VIS\\Huysmans and Verelst - 2013 - Towards an Engineering-Based Research Approach for.pdf}
}

@article{de_bruyn_enabling_2018,
  title = {Enabling {{Normalized Systems}} in {{Practice}} – {{Exploring}} a {{Modeling Approach}}},
  author = {De Bruyn, Peter and Mannaert, Herwig and Verelst, Jan and Huysmans, Philip},
  date = {2018-02},
  journaltitle = {Business \& Information Systems Engineering},
  shortjournal = {Bus Inf Syst Eng},
  volume = {60},
  number = {1},
  pages = {55--67},
  issn = {2363-7005, 1867-0202},
  doi = {10.1007/s12599-017-0510-4},
  url = {http://link.springer.com/10.1007/s12599-017-0510-4},
  urldate = {2022-04-23},
  abstract = {Contemporary organizations are required to adapt to a changing environment in an agile way, which is often deemed very challenging. Normalized Systems (NS) theory attempts to build highly evolvable software systems by using systems theory as its theoretical underpinning. A modeling method which supports the identification of the NS elements, required for building NS sofware in practice, is currently missing. Therefore, the paper introduces an approach for creating both data models and processing models in the context of NS, as well as their integration. It is discussed how these models can be taken as the input for the actual creation of evolutionary prototypes by using an earlier developed supporting tool. The modeling approach and its suitability for feeding the tool are evaluated to discover their current strengths and weaknesses.},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\W6YXBWWG\\De Bruyn et al. - 2018 - Enabling Normalized Systems in Practice – Explorin.pdf}
}

@inproceedings{huysmans_integrating_2015,
  title = {Integrating {{Information Systems Using Normalized Systems Theory}}: {{Four Case Studies}}},
  shorttitle = {Integrating {{Information Systems Using Normalized Systems Theory}}},
  booktitle = {2015 {{IEEE}} 17th {{Conference}} on {{Business Informatics}}},
  author = {Huysmans, Philip and Verelst, Jan and Mannaert, Herwig and Oost, Arco},
  date = {2015-07},
  pages = {173--180},
  publisher = {{IEEE}},
  location = {{Lisbon, Portugal}},
  doi = {10.1109/CBI.2015.43},
  url = {http://ieeexplore.ieee.org/document/7264730/},
  urldate = {2022-04-25},
  abstract = {New technical and business opportunities lead to the adoption of new information systems. Integrating these new systems with the existing application landscape poses many challenges, especially when legacy systems are involved. These systems may rely on completely different architectures or assumptions regarding functionality. Normalized Systems Theory addresses this issue by stating that information systems should behave as stable systems. It identifies the main obstacle to achieving stability, so-called combinatorial effects, and proposes four design theorems to avoid these combinatorial effects. Based on these theorems, a set of exemplary software elements are created which can be used to generate applications. In this paper, we demonstrate the real-world usage of these software elements in legacy integration projects by describing four case studies. From a theoretical perspective, these cases validate the theorybased approach of Normalized Systems Theory. From a practical perspective, these cases demonstrate how adoption of Normalized Systems software could be approached: first, by integrating existing systems, and second, by building future applications adhering to the theory.},
  eventtitle = {2015 {{IEEE}} 17th {{Conference}} on {{Business Informatics}} ({{CBI}})},
  isbn = {978-1-4673-7340-1},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\UNHT9VDT\\Huysmans et al. - 2015 - Integrating Information Systems Using Normalized S.pdf}
}

@article{lehman_programs_1980,
  title = {Programs, Life Cycles, and Laws of Software Evolution},
  author = {Lehman, M.M.},
  date = {1980},
  journaltitle = {Proceedings of the IEEE},
  shortjournal = {Proc. IEEE},
  volume = {68},
  number = {9},
  pages = {1060--1076},
  issn = {0018-9219},
  doi = {10.1109/PROC.1980.11805},
  url = {http://ieeexplore.ieee.org/document/1456074/},
  urldate = {2022-04-25},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\KXYZEMV7\\Lehman - 1980 - Programs, life cycles, and laws of software evolut.pdf}
}

@book{mannaert_normalized_2016,
  title = {Normalized Systems Theory: From Foundations for Evolvable Software toward a General Theory for Evolvable Design},
  shorttitle = {Normalized Systems Theory},
  author = {Mannaert, Herwig and Verelst, Jan and De Bruyn, Peter},
  date = {2016},
  publisher = {{nsi-Press powered bei Koppa}},
  location = {{Kermt}},
  isbn = {978-90-77160-09-1},
  langid = {english},
  pagetotal = {507},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\SKBV7YKY\\Mannaert et al. - 2016 - Normalized systems theory from foundations for ev.pdf}
}

@article{mannaert_realization_2020,
  title = {On the {{Realization}} of {{Meta-Circular Code Generation}} and {{Two-Sided Collaborative Metaprogramming}}},
  author = {Mannaert, Herwig and Cock, Koen De and Uhnak, Peter},
  date = {2020},
  pages = {11},
  abstract = {The automated generation of source code is a widely adopted technique to improve the productivity of computer programming. Normalized Systems Theory (NST) aims to create software systems exhibiting a proven degree of evolvability. A software implementation exists to create skeletons of Normalized Systems (NS) applications, based on automatic code generation. This paper describes how the NS model representation, and the corresponding code generation, has been made meta-circular, and presents its detailed architecture. It is argued that this feature may be crucial to improve the productivity of metaprogramming, as it enables scalable collaboration based on two-sided interfaces. Some preliminary results from applying this approach in practice are presented and discussed.},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\YUMTP3VB\\Mannaert et al. - 2020 - On the Realization of Meta-Circular Code Generatio.pdf}
}

@article{mannaert_towards_2012,
  title = {Towards Evolvable Software Architectures Based on Systems Theoretic Stability},
  author = {Mannaert, Herwig and Verelst, Jan and Ven, Kris},
  date = {2012-01},
  journaltitle = {Software: Practice and Experience},
  shortjournal = {Softw. Pract. Exper.},
  volume = {42},
  number = {1},
  pages = {89--116},
  issn = {00380644},
  doi = {10.1002/spe.1051},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/spe.1051},
  urldate = {2022-04-23},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\UI6ZJAMK\\Mannaert et al. - 2012 - Towards evolvable software architectures based on .pdf}
}

@article{nuel_towards_nodate,
  title = {Towards {{Designing Modular}} and {{Evolvable Business Processes}}},
  author = {Nuffel, Dieter Van},
  pages = {424},
  langid = {english},
  file = {C\:\\Users\\gkoks\\Zotero\\storage\\WJGRQ7BF\\Nuﬀel - Towards Designing Modular and Evolvable Business P.pdf}
}


